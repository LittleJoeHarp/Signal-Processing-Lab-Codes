% Define note frequencies in Hz (assuming 'G1' is a higher octave than 'G')
note = struct(...
    'G', 392.00, ...
    'A', 440.00, ...
    'B', 493.88, ...
    'C', 523.25, ...
    'D', 587.33, ...
    'E', 659.25, ...
    'F', 698.46, ...
    'G1', 783.99, ...
    'A1', 880.00, ...
    'B1', 987.77, ...
    'C1', 1046.50, ...
    'D1', 1174.66, ...
    'E1', 1318.51, ...
    'F1', 1396.91);

% Define the melody frequencies and durations
F_notes = [
    note.G1, note.G1, note.E1, note.F1, note.E1, note.D1, note.E1, note.G1, note.E1, note.D, note.C, note.B, note.C, ...
    note.G, note.A, note.G1, note.G1, note.E1, note.G1, note.F1, note.E1, note.D, ...
    note.D1, note.E1, note.G1, note.E1, note.D, note.C, note.B, note.C, ...
    note.C1, note.D1, note.E1, note.G1, note.G1, note.F1, note.E1, note.D, note.C, note.D, note.E1, ...
    note.G1, note.F1, note.E1, note.D, note.C, note.D, note.E1, note.G1, note.F1, note.E1, note.D, note.C, note.D, ...
    note.C1, note.D1, note.E1, note.G1, note.F1, note.E1, note.D, note.C, note.D, note.E1, ...
    note.F1, note.G1, note.F1, note.E1, note.D, note.C, ...
    note.G, note.A, note.C1, note.C1, note.D1, note.E1, note.E1, note.F1, note.E1, note.D
];


% Duration array (adjusted as needed for timing)
td_notes = [
    0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, ...
    0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, ...
    0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, ...
    0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, ...
    0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, ...
    0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, ...
    0.4, 0.4, 0.4, 0.4, 0.4, 0.4, ...
    0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4
];



A = 1 ./ (1:5).^3;           
P = zeros(1, 5);              
adsr = [0.3, 0.2, 0.3, 0.4, 0.1];   
fs = 10000;                   

yn = my_synthesizer(A, F_notes, P, adsr, td_notes, fs);

soundsc(yn, fs);


audiowrite('Qc.wav', yn, fs);